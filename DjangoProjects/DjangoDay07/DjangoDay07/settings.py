"""
Django settings for DjangoDay07 project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'gs=h6xhn+est##9%-@iip859!6x__l8g$t9g4bgby*ft_7z%mj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app.apps.AppConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'DjangoDay07.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoDay07.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'python1812_6',
        'USER':'yi',
        'PASSWORD':' ',
        'HOST':'127.0.0.1',
        'PORT':'3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-Hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]

# 缓存配置
# CACHES = {
#   'default': {
#       'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
#       # 如果你只有一个本地内存缓存，你可以忽略这个设置；
#       # 如果你有多个的时候，你需要至少给他们中一个赋予名字以区分他们;
#       'LOCATION': 'unique-snowflake',
#       'TIMEOUT':60
#   }
# }

# 基于mysql的缓存
# 首先要在 mysql 中创建对应的表单python manage.py createcachetable cache_table_name
# CACHES = {
#   'default': {
#       'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
#       # 使用缓存数据对应的表单
#       'LOCATION': 'my_cache_table',
#   }
# }

# 基于文件系统的缓存
CACHES = {
  'default': {
      'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
      # 缓存所在的位置
      # 必须保证对你列出的路径具有读写权限
      'LOCATION': '/Users/sorrisoyi/Myproject/pythonStudy/DjangoProjects/DjangoDay07/cache',
      'TIMEOUT':10
  }
}

# 基于 redis 的缓存
# 安装插件 pip istall django_redis
# redis 服务要启动
# 配置
# CACHES = {
#   'default': {
#       'BACKEND': 'django_redis.cache.RedisCache',
#       # 缓存所在的位置
#       # 必须保证对你列出的路径具有读写权限
#       'LOCATION': 'redis://127.0.0.1:6379/0',
#       'OPTIONS':{
#         "CLIENT_CLASS": "django_redis.client.DefaultClient",
#       }
#   }
# }